parameters:
    secret: Gn5a8rg7waA7Rp2C/U315vpWPd9DbzgdO+qQaCe7/zg=
    workflow_inreview_transition_message_title: "Review Product"
    workflow_reject_product_transition_message_title: "Reject Product"
    workflow_restart_product_transition_message_title: "Reassign Product"

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
    #
    # CONTROLLERS
    #

    # auto-register all controllers as services
    App\Controller\:
        resource: "../src/Controller"
        public: true
        tags: ["controller.service_arguments"]

    #
    # COMMANDS
    #

    # auto-register all commands as services
    App\Command\:
        resource: "../src/Command/*"
        tags: ["console.command"]

    App\EventListener\ObjectListener:
        tags:
            - {
                  name: kernel.event_listener,
                  event: pimcore.dataobject.preAdd,
                  method: onPreAdd,
              }
            - {
                  name: kernel.event_listener,
                  event: pimcore.dataobject.postAdd,
                  method: onPostAdd,
              }
            - {
                  name: kernel.event_listener,
                  event: pimcore.dataobject.preUpdate,
                  method: onPreUpdate,
              }

    App\EventListener\WorkflowListener:
        tags:
            - {
                  name: kernel.event_listener,
                  event: workflow.product_workflow.transition.submit_for_review,
                  method: onSubmitForReview,
              }
            - {
                  name: kernel.event_listener,
                  event: workflow.product_workflow.transition.reject_product,
                  method: onRejectProduct,
              }
            - {
                  name: kernel.event_listener,
                  event: workflow.product_workflow.transition.accept_product,
                  method: onAcceptProduct,
              }
            - {
                  name: kernel.event_listener,
                  event: workflow.product_workflow.transition.restart_workflow,
                  method: onRestartProductWorkflow,
              }
